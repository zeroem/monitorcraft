- name: system packages
  apt: pkg={{ item }}
       state=latest
  with_items:
   - libcairo2-dev
   - python-cairo
   - python-rrdtool
   - memcached

- name: download graphite packages
  git: repo=https://github.com/graphite-project/{{ item }}
       version={{ graphite_version }}
       dest={{ graphite_repos_dir }}/{{ item }}
       depth=1
  with_items: graphite_packages
  sudo_user: "{{ graphite_user }}"

- name: workaround for network blocking git://
  command: sed -i -e "s/git+git/git+https/" {{ graphite_repos_dir }}/{{ item }}/requirements.txt
  with_items: graphite_packages
  sudo_user: "{{ graphite_user }}"

- name: install graphite deps
  pip: requirements={{ graphite_repos_dir }}/{{ item }}/requirements.txt
       virtualenv={{ graphite_virtualenv }}
  with_items: graphite_packages
  sudo_user: "{{ graphite_user }}"

- name: set install dir
  lineinfile: dest={{ graphite_repos_dir }}/{{ item }}/setup.cfg
               state=present
               regexp=^prefix.*
               line=prefix={{ graphite_home }}
               backup=yes
  when: item != "ceres"
  with_items: graphite_packages
  sudo_user: "{{ graphite_user }}"

- name: setup graphite apps
  command: chdir={{graphite_repos_dir }}/{{ item }}
           {{ graphite_python }} setup.py build install
  with_items: graphite_packages
  sudo_user: "{{ graphite_user }}"

- name: copy example confs to main conf
  command: chdir={{ graphite_home }}/conf
           creates={{ graphite_home }}/conf/{{ item }} 
           cp {{ item }}.example {{ item }}
  with_items: graphite_carbon_conf_files
  sudo_user: "{{ graphite_user }}"

- name: change sqlite storage location
  lineinfile: >
    dest={{ graphite_home }}/webapp/graphite/settings.py
    state=present
    regexp=\'NAME\':\\s+\'/opt
    line="'NAME': '{{ graphite_home }}/storage/graphite_db',"
    backup=yes
  sudo_user: "{{ graphite_user }}"

- name: setup sqlite
  command: chdir={{ graphite_home }}/webapp/graphite
           {{ graphite_python }} manage.py syncdb --noinput
  environment:
    PYTHONPATH: "{{ graphite_home }}/webapp"
  sudo_user: "{{ graphite_user }}"

- name: install carbon-cache server upstart
  template: src={{ item }}.conf.j2
            dest=/etc/init/{{ item }}.conf
            mode=0644
  with_items: [ "carbon-cache", "graphite-web" ]

- name: get graphite running
  service: name={{ item }} state=restarted 
  with_items: [ "carbon-cache", "graphite-web" ]
